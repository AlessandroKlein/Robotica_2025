<?xml version="1.0"?>

<robot name="diffbot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- ======================= -->
  <!-- === Propiedades === -->
  <!-- ======================= -->

  <!-- Masa del chasis en kilogramos -->
  <xacro:property name="chassis_mass" value="0.8"/>

  <!-- Radio de las ruedas (m) -->
  <xacro:property name="wheel_radius" value="0.035"/>

  <!-- Ancho de las ruedas (m) -->
  <xacro:property name="wheel_width" value="0.025"/>

  <!-- Separación entre las dos ruedas principales (m) -->
  <xacro:property name="wheel_separation" value="0.16"/>

  <!-- Color de las ruedas -->
  <xacro:property name="wheel_color" value="silver"/>

  <!-- Posición del caster con respecto al centro del robot (x, y, z) en metros -->
  <xacro:property name="caster_origin_xyz" value="-0.075 0 0.002"/>

  <!-- Color del caster y sus partes -->
  <xacro:property name="caster_color" value="orange"/>

  <!-- ======================= -->
  <!-- === Includes === -->
  <!-- ======================= -->

  <!-- Inclusión de macros para cálculo de masa -->
  <xacro:include filename="$(find tp1_robot)/urdf/inertial_macros.xacro"/>

  <!-- Inclusión de componentes para motores -->
  <xacro:include filename="$(find tp1_robot)/urdf/motor.xacro"/>

  <!-- ======================= -->
  <!-- === Chasis del robot === -->
  <!-- ======================= -->

  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/> <!-- Posición y orientación visual del chasis -->
      <geometry>
        <mesh filename="file://$(find tp1_robot)/meshes/chassis.stl"/> <!-- Malla visual -->
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/> <!-- Posición y orientación de colisiones -->
      <geometry>
        <box size="0.195 0.1 0.05"/> <!-- Tamaño de la caja de colisión: largo, ancho, alto (m) -->
      </geometry>
    </collision>
    <xacro:inertial_box mass="${chassis_mass}" x="0.195" y="0.1" z="0.05">
      <origin xyz="0 0 0" rpy="0 0 0"/> <!-- Centro de masa -->
    </xacro:inertial_box>
  </link>

  <!-- ======================= -->
  <!-- === Macro para ruedas === -->
  <!-- ======================= -->

  <xacro:macro name="wheel" params="prefix xyz axis">
    <link name="${prefix}_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="1.5708 0 0"/> <!-- Rueda girada para estar vertical -->
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/> <!-- Cilindro como rueda -->
        </geometry>
        <material name="${wheel_color}"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="1.5708 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="${wheel_color}"/>
      </collision>
    </link>
    <joint name="${prefix}_wheel_joint" type="continuous">
      <origin xyz="${xyz}" rpy="0 0 0"/> <!-- Posición de la rueda respecto al chasis -->
      <parent link="base_link"/>
      <child link="${prefix}_wheel"/>
      <axis xyz="${axis}"/> <!-- Eje de rotación de la rueda -->
    </joint>
  </xacro:macro>

  <!-- ======================= -->
  <!-- === Ruedas izquierda y derecha === -->
  <!-- ======================= -->

  <xacro:wheel prefix="left"  xyz="0.0175  0.065 -0.0175" axis="0 1 0"/> <!-- Rueda izquierda -->
  <xacro:wheel prefix="right" xyz="0.0175 -0.065 -0.0175" axis="0 1 0"/> <!-- Rueda derecha -->

  <xacro:motor prefix="left" chassis_width="0.1" reflect="false"/> <!-- Motor izquierdo -->
  <xacro:motor prefix="right" chassis_width="0.1" reflect="true"/> <!-- Motor derecho -->

  <!-- ======================= -->
  <!-- === Caster trasero (rueda loca) === -->
  <!-- ======================= -->

  <!-- Base del caster -->
  <link name="caster">
    <visual>
      <origin xyz="0 0 0.0045" rpy="0 0 0"/>
      <geometry>
        <mesh filename="file://$(find tp1_robot)/meshes/caster_base.stl"/>
      </geometry>
      <material name="${caster_color}"/>
    </visual>
  </link>
  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster"/>
    <origin xyz="${caster_origin_xyz}" rpy="0 0 0"/> <!-- Posición del caster respecto al chasis -->
  </joint>

  <!-- Rueda rotante del caster -->
  <link name="caster_wheel">
    <visual>
      <origin xyz="-0.015 0 -0.020" rpy="0 0 0"/>
      <geometry>
        <mesh filename="file://$(find tp1_robot)/meshes/caster_wheel.stl"/>
      </geometry>
      <material name="${caster_color}"/>
    </visual>
  </link>
  <joint name="caster_wheel_joint" type="continuous">
    <parent link="caster"/>
    <child link="caster_wheel"/>
    <origin xyz="0 0 -0.01" rpy="0 0 0"/> <!-- Eje de giro libre -->
    <axis xyz="0 0 1"/> <!-- Rueda gira libremente en z -->
  </joint>

  <!-- Soporte de la rueda del caster -->
  <link name="caster_wheel_support">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="file://$(find tp1_robot)/meshes/caster_wheel_support.stl"/>
      </geometry>
      <material name="${caster_color}"/>
    </visual>
  </link>
  <joint name="caster_support_joint" type="fixed">
    <parent link="caster_wheel"/>
    <child link="caster_wheel_support"/>
    <origin xyz="0 0 0" rpy="0 0 0"/> <!-- Unido directamente sin movimiento -->
  </joint>

  <!-- ======================= -->
  <!-- === Odometría del robot === -->
  <!-- ======================= -->

  <link name="odom"/>
  <joint name="odom_to_base_link" type="fixed">
    <parent link="odom"/>
    <child link="base_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/> <!-- Sistema de referencia absoluto -->
  </joint>

  <!-- ======================= -->
  <!-- === Plugin de Gazebo para ROS1 === -->
  <!-- ======================= -->

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_diff_drive.so">
      <ros><namespace>/diffbot</namespace></ros>
      <wheel_separation>${wheel_separation}</wheel_separation>
      <wheel_diameter>0.07</wheel_diameter>
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
    </plugin>
  </gazebo>

  <!-- ======================= -->
  <!-- === Controlador ROS 2 === -->
  <!-- ======================= -->

  <ros2_control name="diffbot_controller" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/RobotHWSim</plugin>
    </hardware>
    <joint name="left_wheel_joint">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="right_wheel_joint">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="caster_wheel_joint">
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>

</robot>